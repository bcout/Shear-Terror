using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine;

public class SheepMovement : MonoBehaviour
{

    private GameObject game_controller;

    private void Awake()
    {
        // PlayerInputActions is the c# file generated by the new input system, using the input maps/actions defined in the unity editor
        PlayerInputActions player_input_actions = new PlayerInputActions();

        // Enable the player action map
        player_input_actions.Player.Enable();

        // Subscribe to the performed event of each input action
        player_input_actions.Player.Jump.performed += Jump;
        player_input_actions.Player.MoveLeft.performed += MoveLeft;
        player_input_actions.Player.MoveRight.performed += MoveRight;
    }

    private void Start()
    {
        game_controller = GameObject.Find("Game Controller");
        print(game_controller.name);
    }

    private void Update()
    {
        
    }

    private void Jump(InputAction.CallbackContext context)
    {
        print("Jump");
    }

    private void MoveLeft(InputAction.CallbackContext context)
    {
        print("Move left");
        switch (PlayerData.curr_lane)
        {
            case PlayerData.Lanes.LEFT:
                // Do nothing
                break;
            case PlayerData.Lanes.MIDDLE:
                PlayerData.curr_lane = PlayerData.Lanes.LEFT;
                break;
            case PlayerData.Lanes.RIGHT:
                PlayerData.curr_lane = PlayerData.Lanes.MIDDLE;
                break;
        }
    }

    private void MoveRight(InputAction.CallbackContext context)
    {
        print("Move right");
        switch (PlayerData.curr_lane)
        {
            case PlayerData.Lanes.LEFT:
                PlayerData.curr_lane = PlayerData.Lanes.MIDDLE;
                break;
            case PlayerData.Lanes.MIDDLE:
                PlayerData.curr_lane = PlayerData.Lanes.RIGHT;
                break;
            case PlayerData.Lanes.RIGHT:
                // Do nothing
                break;
        }
    }
}
